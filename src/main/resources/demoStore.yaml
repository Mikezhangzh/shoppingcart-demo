openapi: 3.0.1
info:
  title: Lei's Shopping cart API demo
  version: v0
servers:
  - url: http://localhost:8080
tags:
  - name: Admin API
    description: Admin APIs for managing products and discount
  - name: Customer Shopping cart API
    description: Customer shopping cart APIs
paths:
  /cart/update:
    put:
      tags:
        - Customer Shopping cart API
      summary: "update a shopping item to the cart, e.g. update quantity of a product"
      operationId: updateCartItem
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemInfo'
        required: true
      responses:
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartInfo'
  /admin/product/{productId}:
    put:
      tags:
        - Admin API
      summary: update/modify a product
      operationId: updateProduct
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInfo'
        required: true
      responses:
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
  /admin/discount/{discountId}:
    put:
      tags:
        - Admin API
      summary: update/modify a product discount
      operationId: updateProductDiscount
      parameters:
        - name: discountId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDiscountInfo'
        required: true
      responses:
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
  /cart/add:
    post:
      tags:
        - Customer Shopping cart API
      summary: add a shopping item to the cart
      operationId: addToCart
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartItemInfo'
        required: true
      responses:
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartInfo'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
  /admin/product:
    post:
      tags:
        - Admin API
      summary: add a new product to store
      operationId: addProduct
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductInfo'
        required: true
      responses:
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
  /admin/discount:
    post:
      tags:
        - Admin API
      summary: create a new product discount
      operationId: createProductDiscount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProductDiscountInfo'
        required: true
      responses:
        "405":
          description: Not allowed adding more than 1 discount to a product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "201":
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
  /product:
    get:
      tags:
        - Customer Shopping cart API
      summary: get product list
      operationId: getProductList
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
        "204":
          description: no content
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
  /product/{id}:
    get:
      tags:
        - Customer Shopping cart API
      summary: get product by id
      operationId: getProductById
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "204":
          description: no product exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
  /discount:
    get:
      tags:
        - Customer Shopping cart API
      summary: get product discount list
      operationId: getProductDiscountList
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "204":
          description: no discount exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ProductDiscount'
  /discount/product/{productId}:
    get:
      tags:
        - Customer Shopping cart API
      summary: get a product discount by productId
      operationId: getProductDiscountByProductId
      parameters:
        - name: productId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "204":
          description: no discount exists for the product
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProductDiscount'
  /cart/{cutomerId}:
    get:
      tags:
        - Customer Shopping cart API
      summary: get shopping cart detail for a customer
      operationId: getCartDetailForCustomer
      parameters: []
      responses:
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartInfo'
    delete:
      tags:
        - Customer Shopping cart API
      summary: empty a shopping cart for a customer
      operationId: emptyCartForCustomer
      parameters: []
      responses:
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ShoppingCartInfo'
  /admin/product/{id}:
    delete:
      tags:
        - Admin API
      summary: delete a product in store
      operationId: deleteProduct
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "201":
          description: created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
  /admin/discount/{id}:
    delete:
      tags:
        - Admin API
      summary: delete a product discount in store
      operationId: deleteProductDiscount
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "400":
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "500":
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
        "200":
          description: ok
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BasicApiResponse'
components:
  schemas:
    CartItemInfo:
      required:
        - customerId
        - productId
      type: object
      properties:
        customerId:
          type: integer
          format: int32
        productId:
          type: integer
          format: int32
        quantity:
          minimum: 0
          type: integer
          format: int32
    BasicApiResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
        timestamp:
          type: string
    CartItemDiscountInfo:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        price:
          minimum: 0
          type: number
          format: double
        quantity:
          type: integer
          format: int32
        originalTotal:
          type: number
          format: double
        totalAfterDiscount:
          type: number
          format: double
        discountApplied:
          type: string
    Customer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        email:
          type: string
    ShoppingCartInfo:
      required:
        - customer
      type: object
      properties:
        customer:
          $ref: '#/components/schemas/Customer'
        cartProductInfo:
          type: array
          items:
            $ref: '#/components/schemas/CartItemDiscountInfo'
        grandTotal:
          type: number
          format: double
    ProductInfo:
      required:
        - name
      type: object
      properties:
        name:
          type: string
        price:
          minimum: 0
          type: number
          format: double
    Product:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        price:
          minimum: 0
          type: number
          format: double
    ProductDiscountInfo:
      required:
        - description
        - discountScope
        - discountUnit
        - productId
      type: object
      properties:
        description:
          type: string
        productId:
          type: integer
          format: int32
        discountValue:
          minimum: 0.0
          exclusiveMinimum: false
          type: number
          format: double
        discountUnit:
          type: string
          enum:
            - percentage
            - currency
        orderQuantity:
          minimum: 1
          type: integer
          format: int32
        applyQuantity:
          minimum: 0
          type: integer
          format: int32
        discountScope:
          type: string
          enum:
            - shared
            - exclusive
    ProductDiscount:
      required:
        - description
        - discountUnit
        - product
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
        product:
          $ref: '#/components/schemas/Product'
        discountValue:
          minimum: 0
          type: number
          format: double
        discountUnit:
          type: string
          enum:
            - percentage
            - currency
        orderQuantity:
          minimum: 1
          type: integer
          format: int32
        applyQuantity:
          minimum: 1
          type: integer
          format: int32
        discountScope:
          type: string
          enum:
            - shared
            - exclusive